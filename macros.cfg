
##############################################################################
                    ## Print Macros ##
##############################################################################

[gcode_macro PRINT_END]
gcode:
    M106 P2 S0
    M106 P0 S0
    M106 P3 S0  #Switch off the activated carbon fan
    
    M104 S0
    M140 S0
    M141 S0

    M220 S100
    M221 S100

    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    BED_MESH_CLEAR      
    BED_MESH_PROFILE LOAD=default
    G31
    SET_FILAMENT_SENSOR SENSOR=fila ENABLE=0
    M84

    BEEP I=2 DUR=500

    SFS_off




########################################
#   CHamber heater/exhaust   #
#########################################

[gcode_macro M141]
gcode:
    {% set s = params.S|float %}
    SET_HEATER_TEMPERATURE HEATER=chamber TARGET={([s, 65]|min)}

#################################################
# Waiting time until the chamber is heated    #
#################################################
[gcode_macro M191]
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M141 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR="heater_generic chamber" MINIMUM={([s, 65]|min)} #MAXIMUM={s+1}   
    {% endif %}

########################################
#   Pressure advance/square corner   #
#########################################


[gcode_macro M900_Pressure_advance] #Qidi Gcode for PA
gcode:
  gcode:
    {% if params.K is defined %} 
          SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}  
    {% if params.T is defined %}    
       SET_PRESSURE_ADVANCE SMOOTH_TIME={params.T}
    {% endif %} 


[gcode_macro M205_Square_corner_velocity]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}




##################################
#  Firmware retraction #
##################################


[firmware_retraction]
retract_length: 1 ; length of filament (in mm) at G10/G11
unretract_extra_length: 0 ; length of additional filament (in mm) at G11
retract_speed: 30
unretract_speed: 30

##################################
# To disable X/Y motor bed adjust & screws tilt adjust###
###################################
[gcode_macro disable_X_Y_bed_screw_adjust]
description: disable X/Y motors to adjust screws on bed for flatness
gcode:
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0
  SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0

[gcode_macro M84]
rename_existing:M84.1
gcode:
	SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
	SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
	SET_STEPPER_ENABLE STEPPER=stepper_z enable=0
	SET_STEPPER_ENABLE STEPPER=extruder enable=0
	SET_KINEMATIC_POSITION


[screws_tilt_adjust]
horizontal_move_z: 4
screw_thread: CCW-M4
speed: 300

screw1: 7,37
screw1_name: front left
screw2: 262,37
screw2_name: front right
screw3: 262,297
screw3_name: rear right
screw4: 7,297
screw4_name: rear left


[gcode_macro SCREWS_TILT]
description: Executes the homing of all axes and starts Screws Tilt Calculate
gcode:
    G28
    SCREWS_TILT_CALCULATE

##################################
########PID TUNE################
###############################


# PID tune bed to 65C
[gcode_macro PID_BED_65]
description: Start Bed PID 
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
  RESPOND TYPE=error MSG="This macro cannot be used while printing!"
  {% else %}
  G28
  M106
  G1 Z50 F1500
  RESPOND MSG="Bed PID in progress..."
  PID_CALIBRATE HEATER=heater_bed TARGET={params.TEMP|default(65)}
  G28
  G1 Z50
  SAVE_CONFIG
  {% endif %}

# PID tune hotend to 220C
[gcode_macro PID_HOTEND_220]
description: Start Hotend PID
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
  RESPOND TYPE=error MSG="This macro cannot be used while printing!"
  {% else %}
  G28
  M106
  G1 Z50 F1500
  RESPOND MSG="Hotend PID in progress..."
  PID_CALIBRATE HEATER=extruder TARGET={params.TEMP|default(220)}
  G28
  G1 Z50
  SAVE_CONFIG
  {% endif %}




#############################
# Load/Unload Pause/resume  #
#############################

[gcode_macro UNLOAD_FILAMENT]
description: Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}
  M117 Unloading filament...
  # Extract filament to cold end area 
  G0 E-5 F3600
  # Wait for three seconds
  G4 P3000
  # Push back the filament to smash any stringing 
  G0 E5 F3600
  # Extract back fast in to the cold zone 
  G0 E-15 F3600
  # Continue extraction slowly, allow the filament time to cool solid before it reaches the gears       
  G0 E-130 F300
  M117 Filament unloaded!
  RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
  RESTORE_GCODE_STATE NAME=unload_state


[gcode_macro LOAD_FILAMENT]
description: Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}
  M117 Loading filament...
  # Load the filament into the hotend area.
  G0 E100 F600
  # Wait a secod
  G4 P1000
  # Purge
  G0 E40 F100
  # Wait for purge to complete
  M400e
  M117 Filament loaded!
  RESPOND MSG="Filament loaded!"
  RESTORE_GCODE_STATE NAME=load_state



#################################################
#                 Unload filament               #
#################################################

##[gcode_macro M603]
##description: filament unload
##gcode:
    ##G92 E0
    ##G0  E15 F400
    ##G4  P1000
    ##G92 E0
    ##G1  E-80 F800


#################################################
#                 Load filament                 #
#################################################
##[gcode_macro M604]
##description: filament load
##gcode:
    ##M83
    ##G1  E80 F400





    
   
[gcode_macro M600]
gcode:
  {% set X = params.X|default(printer.configfile.config["stepper_x"]["position_endstop"]|string)|int %}
  {% set Y = params.Y|default(printer.configfile.config["stepper_y"]["position_endstop"]|string)|int %}
  {% set Z = params.Z|default(10)|int %}
  {% set E = params.E|default(-20)|int %}
  {% set tool = params.tool|default(0)|int %}

        SAVE_GCODE_STATE NAME=M600_state
        PAUSE
        G91
        G1 E-5 F4000
        G1 Z{Z}
        G90
        G1 X{X} Y{Y} F3000        ;park position
        G0 E10 F500                ;extrude filament to get better blob on end
        G0 E{E} F600             ;retract additional filament to move out of melt zone
        G92 E0
        SFS_off
        

        

[gcode_macro SWAP_RESUME] 
gcode:
    RESTORE_GCODE_STATE NAME=M600_state
    SFS_on
     



#########################
########Park commands####
#########################

# Park at center of build volume
[gcode_macro PARKCENTER]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F6000    
    RESTORE_GCODE_STATE NAME=PARKCENTER

# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARKBED
    G90                                ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKBED

###################################
#########Case light control#########
####################################

[output_pin caselight]
pin: PC7
pwm: true
shutdown_value: 0
value:1.0                           #the brightness at startup (0-1)
cycle_time: 0.01 


[gcode_macro CASELIGHT_ON]
description: Helper: Light on
gcode:
  SET_PIN PIN=caselight VALUE=1.0
  {action_respond_info("Caselight on")}
    
[gcode_macro CASELIGHT_OFF]
description: Helper: Light off
gcode:
  SET_PIN PIN=caselight VALUE=0.0
  {action_respond_info("Caselight off")}





#################################################################
#########          QIDI's Macros      #####################
############################################################


#[delayed_gcode KINEMATIC_POSITION]
#initial_duration:0.2
#gcode:
   #SET_KINEMATIC_POSITION X=150
    #SET_KINEMATIC_POSITION Y=150
	#SET_KINEMATIC_POSITION Z=150



    
#################################################
#                 Calibration                   #
################################################
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}


    [gcode_macro BED_MESH_CALIBRATION]
gcode:
    M140 S60    #Set the bed temperature to 60 degrees Celsius
    M190 S60    #Wait until the print bed has reached 60 degrees Celsius
    BED_MESH_CLEAR
    G28
    BED_MESH_CALIBRATE PROFILE="default"    #Start bed leveling with the "default" profile
    M140 S0     # Switch off the heating bed
    G1 X165 Y165 F6000  #Move the print head to the center of the bed (280/2=140)
    SAVE_CONFIG # Save the configuration

        
#################################################
#              Beep output                      #
#################################################

[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}        ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}  ; Duration/wait of each beep in ms. Default 100ms.

    {% if printer["output_pin sound"].value|int == 1 %}
        {% for iteration in range(i|int) %}
            SET_PIN PIN=beeper VALUE=1
            G4 P{dur}
            SET_PIN PIN=beeper VALUE=0
    		G4 P{dur}
        {% endfor %}
    {% endif %}

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
   {% endif %}



#################################################
#              Manual bed leveling              #
#################################################
[gcode_macro G30]
gcode:
    BED_MESH_CLEAR      #清除调平数据
#    G28 
    BED_MESH_CALIBRATE mesh_min=10,10  mesh_max=310,310  METHOD=manual #手动动调平



#################################################
#    Fan control  Macro p1-p2-p3 orca  #
#################################################   

[gcode_macro M106]
gcode:
    {% if params.P is defined %}
      {% if params.S is defined %}
        SET_PIN PIN=fan{params.P|int} VALUE={params.S|int}
      {% else %}
        SET_PIN PIN=fan{params.P|int} VALUE=255
      {% endif %}
    {% endif %} 

    {% if params.T is defined %}
        {% if (params.T|int)==-2 %}
          {% if params.S is defined %}       
            SET_PIN PIN=fan3 VALUE={params.S|int}
          {% else %}
            SET_PIN PIN=fan3 VALUE=255
          {% endif %}
        {% endif %}
    {% endif %}

    {% if params.P is undefined %}
    {% if params.T is undefined %}
    {% if params.S is defined %}
            SET_PIN PIN=fan0 VALUE={params.S|int}
       {% else %}
            SET_PIN PIN=fan0 VALUE=255       
    {% endif %}
    {% endif %}
    {% endif %}

[gcode_macro M107]
gcode:  
    SET_PIN PIN=fan0 VALUE=0 
#    SET_PIN PIN=fan1 VALUE=0
#    SET_PIN PIN=fan2 VALUE=0 




     
#################################################
#            Pressure Advanced                  #
#################################################  
[gcode_macro M900]
gcode:
    {% if params.K is defined %} 
          SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}  
    {% if params.T is defined %}    
       SET_PRESSURE_ADVANCE SMOOTH_TIME={params.T}
    {% endif %} 



#################################################
#         Velocity limit                      #
#################################################
[gcode_macro M204]
rename_existing: M99204
gcode:
    {% if params.S is defined %}
        {% set s = params.S|float %}
    {% endif %}
    {% if params.P is defined %}
    {% if params.T is defined %}
        {% set s = [params.P|float ,params.T|float] | min %}
    {% endif %}
    {% endif %}

    SET_VELOCITY_LIMIT ACCEL={s}
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={s/2}


#################################################
#      Z-Offset during the printing process     #
#################################################

[gcode_macro M290]
gcode:
   SET_GCODE_OFFSET Z_ADJUST={params.Z}

   

#################################################
#      Shaper Calibrate         #
#################################################
[gcode_macro shapper_calibrate]
gcode:
    G28
    SHAPER_CALIBRATE
    SAVE_CONFIG



#################################################
#          Pause printing process               #
#################################################   
       
[gcode_macro M0]
gcode:
    PAUSE

[gcode_macro M25]
rename_existing: M9925
gcode:
    PAUSE

#################################################
#          Output pin Sound                     #
#################################################   
[output_pin sound]
pin: PA13
value:1

#################################################
#          BeEper                        #
#################################################

[gcode_macro beep_on]
gcode:
    SET_PIN PIN=sound VALUE=1
    
[gcode_macro beep_off]
gcode:
    SET_PIN PIN=sound VALUE=0






     






